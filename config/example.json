{
  // S4QS-RS will start a HTTP server at this port, with the route /check
  // which returns the string OK. Omit to disable.
  "HTTPPort": 9999,
  // SQS poller options. 
  // Optional.
  "SQS": {
    "poller": {
      // repeat the poll this many times when fetching new messages from SQS.
      // Optional, defaults to 1.
      "repeatPoll": 5
    },
    // SQS region.
    // Required.
    "region": "us-east-1",
    // parameters to pass to SQS. See http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SQS.html.
    // Required.
    "params": {
      "QueueUrl": "https://sqs.us-east-1.amazonaws.com/123456789/some-queue-name",
      "WaitTimeSeconds": 20,
      "MaxNumberOfMessages": 10
    }
  },

  "S3Copier": {
    // AWS S3 constructor options.
    // Required. ACL must be defined here, other parameters are optional.
    "S3": {
      "params": {
        "ACL": "bucket-owner-full-control"
      }
    },
    // Manifest uploader options.
    // Required.
    "manifestUploader": {
      // Minimum number of URIs to have in each manifest (see maxWaitSeconds)
      // Required.
      "minToUpload": 25,
      // Upload manifest at intervals of maxWaitSeconds seconds, regardless of amount of messages in them.
      // Required.
      "maxWaitSeconds": 600,
      // Value of "mandatory" property of manifest items.
      // Required.
      "mandatory": true,
      // Bucket to upload manifests to.
      // Required.
      "bucket": "manifest-bucket",
      // Prefix for manifest keys.
      // Required.
      "prefix": "s4qs/manifests/"
    },
    // LRU cache options. Used for message deduplication.
    // Optional. See https://github.com/isaacs/node-lru-cache for possible options.
    "LRU": {
      "max": 1000
    },
    // Redshift connection string.
    // Required.
    "connStr": "postgres://username:password@example.com:5439/schema",
    // how often to poll for new messages from SQS.
    // Required.
    "pollIntervalSeconds": 300,
    // this will be added to the end of the table name when doing COPYs.
    // Useful for having different tables for different NODE_ENVs.
    // Optional.
    "tablePostfix": "_devel",

    // parameters for Redshift's COPY query.
    // Required.
    "copyParams": {
      /* 
       the "table" property is used to set the Redshift table name. This can be either a string
       like "my_table_name" or a regular expression (which must start and end with a /).
       When using a regex, periods are converted to underscores but that's it.
       Feed S4QS-RS weird URIs and weird stuff will probably happen. You have been warned.

       The example regex and tablePostfix combination would turn an URI like
       s3://bucketname/whatevs/this.will.be.the.table.name/qwerasdf.csv.gz
       to this_will_be_the_table_name_devel.

       If you use Javascript configuration files, you can specify a function
       for "table". The function must take an S3 URI and output a valid
       Redshift table name.
       */
      "table": "/s3:\/\/.*?\/whatevs\/(.*?)\//i",
      // parameterless arguments to COPY. See http://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html.
      // Optional.
      "args": [
        "GZIP",
        "TRUNCATECOLUMNS"
      ],
      // parameters with arguments to COPY. 
      // Boolean arguments can be either true/false, "true"/"false" or "on"/"off".
      // Technically optional, although you'll probably want some.
      "withParams": {
        "DELIMITER": "\\t",
        "REGION": "us-east-1",
        "MAXERROR": 100,
        "NULL": "null",
        "TIMEFORMAT": "auto"
      }
    }
  }
}